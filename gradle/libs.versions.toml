[versions]
spring = "3.3.5"
jackson-module-kotlin = "2.17.2"
reactor-kotlin-extensions = "1.2.3"
kotlin = "2.0.10"
coroutines = "1.8.1"
tomcat = "6.0.53"
reactor-test = "3.7.0"
junit5 = "1.9.0"
junit-platform-launcher = "1.11.3"
dependency-management = "1.1.6"
grpc = "1.68.1"
grpc-spring = "3.1.0.RELEASE"
grpc-stub = "1.4.1"
protobuf-kotlin = "4.29.0"
javax-annotation-api = "1.2"
google-protobuf = "0.9.4"
jlleitschuh-ktlint = "12.1.0"
postgresql = "42.7.4"
r2dbc-postgresql = "1.0.7.RELEASE"
jooq = "3.19.15"
jooq-plugin = "9.0"
flyway = "11.0.0"
arrow-kt = "1.2.4"
kotest-arrow-kt = "1.4.0"
kotest = "5.7.2"
kotest-spring = "1.3.0"
testcontainers = "1.19.8"
detekt = "1.23.7"
detekt-rules = "0.5.0"
block-hound = "1.0.10.RELEASE"
swagger = "2.3.0"
jjwt = "0.12.6"
bcrypt = "0.4.3"
expedia-graphql = "8.2.1"

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring" }
dependency-management = { id = "io.spring.dependency-management", version.ref = "dependency-management" }
google-protobuf = { id = "com.google.protobuf", version.ref = "google-protobuf" }
jlleitschuh-ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "jlleitschuh-ktlint" }
jooq = { id = "nu.studer.jooq", version.ref = "jooq-plugin" }
flyway = { id = "org.flywaydb.flyway", version.ref = "flyway" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }

[libraries]
spring-boot-webflux = { group = "org.springframework.boot", name = "spring-boot-starter-webflux", version.ref = "spring" }
spring-security = { group = "org.springframework.boot", name = "spring-boot-starter-security", version.ref = "spring" }
jackson-module-kotlin = { group = "com.fasterxml.jackson.module", name = "jackson-module-kotlin", version.ref = "jackson-module-kotlin" }
reactor-kotlin-extensions = { group = "io.projectreactor.kotlin", name = "reactor-kotlin-extensions", version.ref = "reactor-kotlin-extensions" }
kotlin-reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect", version.ref = "kotlin" }
coroutines = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-reactor", version.ref = "coroutines" }
tomcat = { group = "org.apache.tomcat", name = "annotations-api", version.ref = "tomcat" }
spring-boot-test = { group = "org.springframework.boot", name = "spring-boot-starter-test", version.ref = "spring" }
reactor-test = { group = "io.projectreactor", name = "reactor-test", version.ref = "reactor-test" }
junit5 = { group = "org.jetbrains.kotlin", name = "kotlin-test-junit5", version.ref = "junit5" }
junit-platform-launcher = { group = "org.junit.platform", name = "junit-platform-launcher", version.ref = "junit-platform-launcher" }
grpc-services = { group = "io.grpc", name = "grpc-services", version.ref = "grpc" }
grpc-spring = { group = "net.devh", name = "grpc-server-spring-boot-starter", version.ref = "grpc-spring" }
grpc-stub = { group = "io.grpc", name = "grpc-kotlin-stub", version.ref = "grpc-stub" }
grpc-protobuf = { group = "io.grpc", name = "grpc-protobuf", version.ref = "grpc" }
grpc-netty = { group = "io.grpc", name = "grpc-netty", version.ref = "grpc" }
protobuf-kotlin = { group = "com.google.protobuf", name = "protobuf-kotlin", version.ref = "protobuf-kotlin" }
javax-annotation-api = { group = "javax.annotation", name = "javax.annotation-api", version.ref = "javax-annotation-api" }
r2dbc = { group = "org.springframework.boot", name = "spring-boot-starter-data-r2dbc", version.ref = "spring" }
postgresql = { group = "org.postgresql", name = "postgresql", version.ref = "postgresql" }
r2dbc-postgresql = { group = "org.postgresql", name = "r2dbc-postgresql", version.ref = "r2dbc-postgresql" }
jooq = { group = "org.jooq", name = "jooq-kotlin", version.ref = "jooq" }
jooq-kotlin = { group = "org.jooq", name = "jooq-kotlin-coroutines", version.ref = "jooq" }
flyway = { group = "org.flywaydb", name = "flyway-core", version.ref = "flyway" }
flyway-postgresql = { group = "org.flywaydb", name = "flyway-database-postgresql", version.ref = "flyway" }
jooq-codegen = { group = "org.jooq", name = "jooq-codegen", version.ref = "jooq" }
arrow-kt-core = { group = "io.arrow-kt", name = "arrow-core", version.ref = "arrow-kt" }
arrow-fx-coroutines = { group = "io.arrow-kt", name = "arrow-fx-coroutines", version.ref = "arrow-kt" }
kotest = { group = "io.kotest", name = "kotest-runner-junit5-jvm", version.ref = "kotest" }
kotest-assertion = { group = "io.kotest", name = "kotest-assertions-core", version.ref = "kotest" }
kotest-spring = { group = "io.kotest.extensions", name = "kotest-extensions-spring", version.ref = "kotest-spring" }
testcontainers = { group = "org.testcontainers", name = "testcontainers", version.ref = "testcontainers" }
testcontainers-junit-jupiter = { group = "org.testcontainers", name = "junit-jupiter", version.ref = "testcontainers" }
testcontainers-r2dbc = { group = "org.testcontainers", name = "r2dbc", version.ref = "testcontainers" }
testcontainers-postgresql = { group = "org.testcontainers", name = "postgresql", version.ref = "testcontainers" }
spring-boot-testcontainers = { module = "org.springframework.boot:spring-boot-testcontainers", version.ref = "spring" }
detekt-rules = { group = "com.wolt.arrow.detekt", name = "rules", version.ref = "detekt-rules" }
block-hound = { group = "io.projectreactor.tools", name = "blockhound", version.ref = "block-hound" }
kotest-arrow-kt = { group = "io.kotest.extensions", name = "kotest-assertions-arrow", version.ref = "kotest-arrow-kt" }
swagger = { group = "org.springdoc", name = "springdoc-openapi-starter-webflux-ui", version.ref = "swagger" }
jjwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jjwt" }
jjwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jjwt" }
jjwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jjwt" }
spring-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring" }
bcrypt = { group = "de.svenkubiak", name = "jBCrypt", version.ref = "bcrypt" }
expedia-graphql = { group = "com.expediagroup", name = "graphql-kotlin-spring-server", version.ref = "expedia-graphql" }

[bundles]
grpc-presentation = ["grpc-stub", "grpc-protobuf", "grpc-netty", "protobuf-kotlin"]
db = ["r2dbc", "postgresql", "r2dbc-postgresql", "jooq", "jooq-kotlin"]
flyway = ["flyway", "flyway-postgresql"]
arrow-kt = ["arrow-kt-core", "arrow-fx-coroutines"]
kotest = ["kotest", "kotest-assertion", "kotest-spring", "kotest-arrow-kt"]
testcontainers = ["testcontainers", "testcontainers-junit-jupiter", "testcontainers-r2dbc", "testcontainers-postgresql", "spring-boot-testcontainers"]
jjwt = ["jjwt-api", "jjwt-impl", "jjwt-jackson"]
